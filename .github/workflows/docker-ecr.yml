name: Build and Push to ECR

on:
  push:
    branches: [ main ]
    #paths:
    #  - 'dockerfile'
    #  - '**/*.html'
    #  - '**/*.js'
    #  - '**/*.css'
    #  - '**/*.json'
    #  - '**/requirements.txt'
    #  - '**/package.json'
    #  - '.github/workflows/**'

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: test1
  AWS_ENVIRONMENT: poc
  #EKS_CLUSTER_NAME: poc-eks-cluster

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      aws_account_id: ${{ steps.get-account-id.outputs.aws_account_id }}
      image_built: ${{ steps.detect-changes.outputs.CHANGES_DETECTED == 'true' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Detect changes
      id: detect-changes
      run: |
        # For push events, use the previous commit and current commit
        PREV_SHA=${{ github.event.before }}
        CURRENT_SHA=${{ github.sha }}
        
        # Fetch both commits to ensure they're available
        git fetch origin $PREV_SHA || true
        git fetch origin $CURRENT_SHA || true

        CHANGED_FILES=$(git diff --name-only $PREV_SHA $CURRENT_SHA || echo "")
        echo "Changed files:"
        echo "$CHANGED_FILES"
        
        if [ -z "$CHANGED_FILES" ]; then
          echo "CHANGES_DETECTED=true" >> $GITHUB_OUTPUT
          echo "📦 Build required: Dockerfile or dependencies changed"
        else
          echo "CHANGES_DETECTED=false" >> $GITHUB_OUTPUT
          echo "✅ No build needed: No changes to Dockerfile or dependencies"
        fi

    - name: Configure AWS credentials
      id: aws-creds
      if: steps.detect-changes.outputs.CHANGES_DETECTED == 'true'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        mask-aws-account-id: true

    - name: Get AWS Account ID
      id: get-account-id
      if: steps.detect-changes.outputs.CHANGES_DETECTED == 'true'
      run: |
        AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
        echo "aws_account_id=$AWS_ACCOUNT_ID" >> $GITHUB_OUTPUT
        echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV

    - name: Login to Amazon ECR
      if: steps.detect-changes.outputs.CHANGES_DETECTED == 'true'
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
        docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

    - name: Build Docker image
      if: steps.detect-changes.outputs.CHANGES_DETECTED == 'true'
      run: |
        docker build -t ${{ env.ECR_REPOSITORY }}:latest .

    - name: Tag Docker image
      if: steps.detect-changes.outputs.CHANGES_DETECTED == 'true'
      run: |
        docker tag ${{ env.ECR_REPOSITORY }}:latest \
        ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

    - name: Push to ECR
      if: steps.detect-changes.outputs.CHANGES_DETECTED == 'true'
      run: |
        docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

    - name: Success message
      if: steps.detect-changes.outputs.CHANGES_DETECTED == 'true'
      run: |
        echo "✅ Image pushed to ECR successfully!"
        echo "📦 ECR Repository: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}"
    
    - name: Skip build message
      if: steps.detect-changes.outputs.CHANGES_DETECTED == 'false'
      run: |
        echo "⏭️ Skipping build: No changes to Dockerfile or dependencies"
    
  deploy-to-eks:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: needs.build-and-push.result == 'success' || needs.build-and-push.result == 'skipped'
       
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        mask-aws-account-id: true

    - name: Verify AWS CLI
      run: aws sts get-caller-identity

    #- name: Set AWS Account ID from build job
    #  run: |
    #    echo "AWS_ACCOUNT_ID=${{ needs.build-and-push.outputs.aws_account_id }}" >> $GITHUB_ENV
    #    echo "Using AWS Account ID from build job: ${{ needs.build-and-push.outputs.aws_account_id }}"

    - name: Get AWS Account ID
      id: get-account-id
      run: |
        AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
        echo "AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}" >> $GITHUB_ENV

    - name: Assume EKS Tools Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/eks-tools-${{ env.AWS_ENVIRONMENT }}-role
        role-session-name: github-runner-${{ github.run_id }}
        aws-region: ${{ env.AWS_REGION }}
     
    - name: Update kubeconfig for EKS cluster
      run: |
        aws eks update-kubeconfig \
        --region ${{ env.AWS_REGION }} \
        --name ${{ env.AWS_ENVIRONMENT }}-eks-cluster

    - name: Verify cluster access
      run: |
        kubectl cluster-info

    - name: Deploy using existing manifests
      run: |
        # Replace image placeholder in deployment.yaml
        sed -i "s|<ACCOUNT_ID>|${{ steps.aws-creds.outputs.aws-account-id }}|g" deployment.yaml
        sed -i "s|<REGION>|${{ env.AWS_REGION }}|g" deployment.yaml
        
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

    #- name: Verify deployment
    #  run: |
    #    echo "📋 Deployment status:"
    #    kubectl get deployment -o wide
    #    echo "📋 Pods status:"
    #    kubectl get pods
    #    echo "📋 Service status:"
    #    kubectl get service

    #- name: Wait for rollout to complete
    #  run: |
    #    kubectl rollout status deployment/nginx-deployment --timeout=120s